# Setting the binding for the Prefix
unbind C-b
set-option -g prefix C-a
bind-key -r C-a send-prefix

# Create a history file for Tmux
set -g history-file ~/.tmux/history

# Binding for sourcing the Tmux config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Bindings for navigating splits/panes
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# Set 256 colours and true colour where available
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides "*:Tc"
set-option -ga terminal-overrides ",*:smxx=\e[9m"

# Set the foreground and background colours for the Tmux status line
set-option -g status-bg 'black'
set-option -g status-fg 'white'

# Set the position of the window list component of the status line: left, centre or right justified.
set-option -g status-justify 'centre'

# Use vi or emacs-style key bindings in the status line, for example at the command prompt
set-option -g status-keys 'vi'

# Set the character escape time for tmux
set-option -sg escape-time 10

# Display string (by default the session name) to the left of the status line
set-option -g status-left '#[bg=yellow,fg=black,bold] #S #[default]#[bg=blue,fg=brightwhite,bold]#{simple_git_status}#[default]'
set-option -ag status-left '#[fg=white,dim] #{t:session_created} #[default]'

# Let the status length be up to 80 characters in length
set-option -g status-left-length 80

# Display string (by default the session name) to the right of the status line
set-option -g status-right '#[bg=brightblack,fg=yellow,bold,italics] #(date "+%A%_ %d%_ %B%_ %G") #[default]'
set-option -ag status-right '#[bg=magenta,fg=white,bold] #(date "+%R%_ %Z") #[default]'

# Let the status length be up to 80 characters in length
set-option -g status-right-length 80

set-option -g pane-active-border-style 'fg=yellow,bold'
set-option -g pane-border-style 'fg=white,dim,italics'
set-option -g pane-border-status 'top' 

# Enable the Mouse
set-option -g mouse on

# Bindings for opening new splits at the current working directory
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# Add bindings for small resize steps
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 1
bind -n S-Down resize-pane -D 1

# Add bindings for larger resize steps
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Up resize-pane -U 5
bind -n C-Down resize-pane -D 5

# Enable focus events in Tmux
set-option -g focus-events on

# Make new Tmux windows open at the current working directory
bind c new-window -c '#{pane_current_path}'

# Number Tmux windows starting at 1
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

# Map detached break pane to Prefix b
bind-key b break-pane -d

# Map session jump to Prefix j
bind-key j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Import platform specific config
if-shell "uname | grep -q Darwin" "source-file ~/.tmux.macos.conf" "source-file ~/.tmux.linux.conf"

# Set a binding for opening htop in a split pane
bind-key h split-window -h "htop"

# Set a binding for opening a vim fuzzy search in the development folder
bind-key D split-window -h -c ~/Development "vim +Files"

# Set a binding for opening a fuzzy search for switchable Tmux sessions
bind-key C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | fzf --reverse | xargs tmux switch-client -t"

# Prompted join pane
bind-key J command-prompt -p "Join pane from: " "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key S select-pane -m\; choose-tree -Zw "swap-pane -t '%%'"

# Enable tmux continuum
set-option -g @continuum-restore 'on'
# Restore contents for panes
set-option -g @resurrect-capture-pane-contents 'on'
# Restore contents for vim
set-option -g @resurrect-strategy-vim 'session'
# Restore contents for neovim
set-option -g @resurrect-strategy-nvim 'session'
# Restore using Startify
set-option -g @resurrect-processes '"vim->vim +SLoad"'
# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set-option -g @plugin 'github_username/plugin_name'
# set-option -g @plugin 'git@github.com/user/plugin'
# set-option -g @plugin 'git@bitbucket.com/user/plugin'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin 'tmux-plugins/tmux-open'
set-option -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set-option -g @plugin 'kristijanhusak/tmux-simple-git-status'

# Auto install TMUX plugin manager on new machines
if "test ! -d ~/.tmux/plugins/tpm" \
          "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
